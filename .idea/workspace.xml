<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="ec853efc-8b38-4438-b5c3-a23685db0f85" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/commit_tree.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/commit_tree.clj" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DepsProjectDetails">
    <option name="cachedModuleDetails">
      <map>
        <entry key="$PROJECT_DIR$/deps.edn">
          <value>
            <ModuleDetails>
              <option name="details" value="{:paths [&quot;src&quot; &quot;classes&quot; &quot;spec&quot;], :deps {org.clojure/clojure {:mvn/version &quot;1.10.1&quot;}, ring/ring {:mvn/version &quot;1.8.0&quot;}, hiccup/hiccup {:mvn/version &quot;1.0.5&quot;}}, :aliases {:deps {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version &quot;0.8.599&quot;}}}, :test {:extra-deps {speclj/speclj {:git/url &quot;https://github.com/kyptin/speclj&quot;, :sha &quot;a843b64cc5a015b8484627eff6e84bbac2712692&quot;}}, :main-opts [&quot;-m&quot; &quot;speclj.cli&quot;]}}, :mvn/repos {&quot;central&quot; {:url &quot;https://repo1.maven.org/maven2/&quot;}, &quot;clojars&quot; {:url &quot;https://repo.clojars.org/&quot;}}, :system-aliases #{:test :deps}, :deps-tree {org.clojure/clojure {:mvn/version &quot;1.10.1&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\org\\clojure\\clojure\\1.10.1\\clojure-1.10.1.jar&quot;], :children (org.clojure/core.specs.alpha org.clojure/spec.alpha)}, commons-codec/commons-codec {:mvn/version &quot;1.11&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\commons-codec\\commons-codec\\1.11\\commons-codec-1.11.jar&quot;], :dependents [ring/ring-codec], :children ()}, ring/ring-devel {:mvn/version &quot;1.8.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\ring\\ring-devel\\1.8.0\\ring-devel-1.8.0.jar&quot;], :dependents [ring/ring], :children (ns-tracker/ns-tracker clj-stacktrace/clj-stacktrace)}, org.clojure/core.specs.alpha {:mvn/version &quot;0.2.44&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\org\\clojure\\core.specs.alpha\\0.2.44\\core.specs.alpha-0.2.44.jar&quot;], :dependents [org.clojure/clojure], :children ()}, org.clojure/spec.alpha {:mvn/version &quot;0.2.176&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\org\\clojure\\spec.alpha\\0.2.176\\spec.alpha-0.2.176.jar&quot;], :dependents [org.clojure/clojure], :children ()}, commons-fileupload/commons-fileupload {:mvn/version &quot;1.4&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\commons-fileupload\\commons-fileupload\\1.4\\commons-fileupload-1.4.jar&quot;], :dependents [ring/ring-core], :children ()}, org.eclipse.jetty/jetty-http {:mvn/version &quot;9.4.22.v20191022&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\org\\eclipse\\jetty\\jetty-http\\9.4.22.v20191022\\jetty-http-9.4.22.v20191022.jar&quot;], :dependents [org.eclipse.jetty/jetty-server], :children (org.eclipse.jetty/jetty-util)}, org.eclipse.jetty/jetty-util {:mvn/version &quot;9.4.22.v20191022&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\org\\eclipse\\jetty\\jetty-util\\9.4.22.v20191022\\jetty-util-9.4.22.v20191022.jar&quot;], :dependents [org.eclipse.jetty/jetty-http], :children ()}, mmargs/mmargs {:mvn/version &quot;1.2.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\mmargs\\mmargs\\1.2.0\\mmargs-1.2.0.jar&quot;], :dependents [speclj/speclj], :children ()}, ring/ring-jetty-adapter {:mvn/version &quot;1.8.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\ring\\ring-jetty-adapter\\1.8.0\\ring-jetty-adapter-1.8.0.jar&quot;], :dependents [ring/ring], :children (org.eclipse.jetty/jetty-server)}, commons-io/commons-io {:mvn/version &quot;2.6&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\commons-io\\commons-io\\2.6\\commons-io-2.6.jar&quot;], :dependents [ring/ring-core], :children ()}, org.clojure/tools.namespace {:mvn/version &quot;0.2.11&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\org\\clojure\\tools.namespace\\0.2.11\\tools.namespace-0.2.11.jar&quot;], :dependents [ns-tracker/ns-tracker], :children ()}, speclj/speclj {:git/url &quot;https://github.com/kyptin/speclj&quot;, :sha &quot;a843b64cc5a015b8484627eff6e84bbac2712692&quot;, :deps/manifest :deps, :deps/root &quot;C:\\Users\\Jake612\\.gitlibs\\libs\\speclj\\speclj\\a843b64cc5a015b8484627eff6e84bbac2712692&quot;, :paths [&quot;C:\\Users\\Jake612\\.gitlibs\\libs\\speclj\\speclj\\a843b64cc5a015b8484627eff6e84bbac2712692\\src&quot;], :children (mmargs/mmargs trptcolin/versioneer fresh/fresh)}, trptcolin/versioneer {:mvn/version &quot;0.1.1&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\trptcolin\\versioneer\\0.1.1\\versioneer-0.1.1.jar&quot;], :dependents [speclj/speclj], :children ()}, hiccup/hiccup {:mvn/version &quot;1.0.5&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\hiccup\\hiccup\\1.0.5\\hiccup-1.0.5.jar&quot;], :children ()}, org.clojure/java.classpath {:mvn/version &quot;0.3.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\org\\clojure\\java.classpath\\0.3.0\\java.classpath-0.3.0.jar&quot;], :dependents [ns-tracker/ns-tracker], :children ()}, ns-tracker/ns-tracker {:mvn/version &quot;0.4.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\ns-tracker\\ns-tracker\\0.4.0\\ns-tracker-0.4.0.jar&quot;], :dependents [ring/ring-devel], :children (org.clojure/tools.namespace org.clojure/java.classpath)}, fresh/fresh {:mvn/version &quot;1.1.2&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\fresh\\fresh\\1.1.2\\fresh-1.1.2.jar&quot;], :dependents [speclj/speclj], :children ()}, crypto-random/crypto-random {:mvn/version &quot;1.2.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\crypto-random\\crypto-random\\1.2.0\\crypto-random-1.2.0.jar&quot;], :dependents [ring/ring-core], :children ()}, ring/ring-codec {:mvn/version &quot;1.1.2&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\ring\\ring-codec\\1.1.2\\ring-codec-1.1.2.jar&quot;], :dependents [ring/ring-core], :children (commons-codec/commons-codec)}, crypto-equality/crypto-equality {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\crypto-equality\\crypto-equality\\1.0.0\\crypto-equality-1.0.0.jar&quot;], :dependents [ring/ring-core], :children ()}, org.eclipse.jetty/jetty-io {:mvn/version &quot;9.4.22.v20191022&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\org\\eclipse\\jetty\\jetty-io\\9.4.22.v20191022\\jetty-io-9.4.22.v20191022.jar&quot;], :dependents [org.eclipse.jetty/jetty-server], :children ()}, javax.servlet/javax.servlet-api {:mvn/version &quot;3.1.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\javax\\servlet\\javax.servlet-api\\3.1.0\\javax.servlet-api-3.1.0.jar&quot;], :dependents [org.eclipse.jetty/jetty-server], :children ()}, clj-stacktrace/clj-stacktrace {:mvn/version &quot;0.2.8&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\clj-stacktrace\\clj-stacktrace\\0.2.8\\clj-stacktrace-0.2.8.jar&quot;], :dependents [ring/ring-devel], :children ()}, ring/ring-servlet {:mvn/version &quot;1.8.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\ring\\ring-servlet\\1.8.0\\ring-servlet-1.8.0.jar&quot;], :dependents [ring/ring], :children ()}, ring/ring {:mvn/version &quot;1.8.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\ring\\ring\\1.8.0\\ring-1.8.0.jar&quot;], :children (ring/ring-devel ring/ring-jetty-adapter ring/ring-servlet ring/ring-core)}, org.eclipse.jetty/jetty-server {:mvn/version &quot;9.4.22.v20191022&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\org\\eclipse\\jetty\\jetty-server\\9.4.22.v20191022\\jetty-server-9.4.22.v20191022.jar&quot;], :dependents [ring/ring-jetty-adapter], :children (org.eclipse.jetty/jetty-http org.eclipse.jetty/jetty-io javax.servlet/javax.servlet-api)}, ring/ring-core {:mvn/version &quot;1.8.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Jake612\\.m2\\repository\\ring\\ring-core\\1.8.0\\ring-core-1.8.0.jar&quot;], :dependents [ring/ring], :children (commons-fileupload/commons-fileupload commons-io/commons-io crypto-random/crypto-random ring/ring-codec crypto-equality/crypto-equality)}}}" />
              <option name="hash" value="dc0e762f52a9cf03863c1be3ba9ffdeb" />
            </ModuleDetails>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1YbBJZ09x38JWL5XeACbYAWLBiC" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="cursive.last.file.extension.C\:/Users/Jake612/IdeaProjects/Comp590-Assignment3/src" value="clj" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Jake612\IdeaProjects\Comp590-Assignment3\test-dir\parse-dir" />
    </key>
  </component>
  <component name="ReplState" timestamp="1585945583170">{:repl-history {:ide [], :local [{:command &quot;(re-find (re-pattern \&quot;/\&quot;) \&quot;testdir/\&quot;)&quot;, :offset 35, :ns &quot;user&quot;} {:command &quot;(re-seq #\&quot;\\\\/\&quot; \&quot;/hello\\\\world\&quot;)&quot;, :offset 29, :ns &quot;user&quot;} {:command &quot;(re-seq #\&quot;\\\\\&quot; \&quot;/hello\\\\world\&quot;)&quot;, :offset 27, :ns &quot;user&quot;} {:command &quot;(str (re-seq #\&quot;\\\\\&quot; \&quot;\&quot;) (re-seq #\&quot;/\&quot; \&quot;//\&quot;))&quot;, :offset 20, :ns &quot;user&quot;} {:command &quot;(println (str (re-seq #\&quot;\\\\\&quot; \&quot;\&quot;) (re-seq #\&quot;/\&quot; \&quot;//\&quot;))) &quot;, :offset 51, :ns &quot;user&quot;} {:command &quot;(re-seq #\&quot;\\\\\&quot; \&quot;\\\\\\\\\&quot;)&quot;, :offset 19, :ns &quot;user&quot;} {:command &quot;(str (re-seq #\&quot;\\\\\&quot; \&quot;\\\\\&quot;) (re-seq #\&quot;\\\\\&quot; \&quot;\\\\\&quot;))&quot;, :offset 22, :ns &quot;user&quot;} {:command &quot;(#(+ (count (re-seq #\&quot;\\\\\&quot; (.getPath %))) (count (re-seq #\&quot;/\&quot; (.getPath %)))) \&quot;//\\\\\&quot;) &quot;, :offset 82, :ns &quot;user&quot;} {:command &quot;(#(+ (count (re-seq #\&quot;\\\\\&quot; %)) (count (re-seq #\&quot;/\&quot; %))) \&quot;//\\\\\&quot;) &quot;, :offset 27, :ns &quot;user&quot;} {:command &quot;(.exists (io/file \&quot;test-dir\\\\.idiot/objects\&quot;))&quot;, :offset 43, :ns &quot;user&quot;} {:command &quot;(io/make-parents \&quot;tmp\\\\dir/objects/sample.txt\&quot;)&quot;, :offset 45, :ns &quot;user&quot;} {:command &quot;(ns file-io\n  (:require [clojure.java.io :as io]\n            [clojure.string :as str])\n  (:import (java.util.zip InflaterInputStream)\n           (java.io ByteArrayOutputStream)))&quot;, :offset 178, :ns &quot;user&quot;} {:command &quot;(defn split-at-byte [b bytes]\n  (let [part1 (take-while (partial not= b) bytes)\n        part2 (nthrest bytes (-&gt; part1 count inc))]\n    [part1 part2]))&quot;, :offset 151, :ns &quot;file-io&quot;} {:command &quot;(split-at-byte 0x00 [0x1 0x00 0x2])&quot;, :offset 33, :ns &quot;file-io&quot;} {:command &quot;(slurp (file/io \&quot;test-dir/dir/file\&quot;))&quot;, :offset 34, :ns &quot;file-io&quot;} {:command &quot;(slurp (io/file \&quot;test-dir/dir/file\&quot;))&quot;, :offset 14, :ns &quot;file-io&quot;} {:command &quot;(ns commit\n  (:require [clojure.java.io :as io]\n            [commit-tree :as ct]\n            [rev-parse :as rp]\n            [branch :as bh]))\n\n(defn handle-commit\n  [commit-address dir db]\n  (let [head-branch (bh/get-master-name dir db)\n        ref-address (str dir db \&quot;/refs/heads/\&quot; head-branch)\n        spit-to-ref #(spit ref-address (str % \&quot;\\n\&quot;))]\n    (when (not (nil? commit-address))\n      (println \&quot;Commit created\&quot;)\n      (if (rp/is-ref? (str dir db \&quot;/HEAD\&quot;))\n        (if (.exists (io/as-file ref-address))\n          (do (io/delete-file ref-address)\n              (spit-to-ref commit-address)\n              (println (str \&quot;Updated branch \&quot; head-branch \&quot;.\&quot;)))\n          (spit-to-ref commit-address))\n        (spit (str dir db \&quot;/HEAD\&quot;) (str commit-address \&quot;\\n\&quot;))))))\n\n\n(defn commit\n  \&quot;function for handling commit\&quot;\n  [args dir db]\n  (let [[tree-addr m-switch message &amp; parent-commits] args]\n    (cond\n      (not (.isDirectory (io/file dir db))) (println \&quot;Error: could not find database. (Did you run `idiot init`?)\&quot;)\n      (nil? tree-addr) (println \&quot;Error: you must specify a tree address.\&quot;)\n      (not (.exists (io/as-file (ct/file-path tree-addr dir db)))) (println \&quot;Error: no tree object exists at that address.\&quot;)\n      (not= (ct/get-object-type tree-addr dir db) \&quot;tree\&quot;) (println \&quot;Error: an object exists at that address, but it isn't a tree.\&quot;)\n      (not= m-switch \&quot;-m\&quot;) (println \&quot;Error: you must specify a message.\&quot;)\n      (nil? message) (println \&quot;Error: you must specify a message with the -m switch.\&quot;)\n      :else (handle-commit (ct/parent-commit-handler message tree-addr parent-commits dir db) dir db))))\n&quot;, :offset 1618, :ns &quot;user&quot;} {:command &quot;(commit [\&quot;f95a59dd3a4cd71c504ee332114\\n568b8c5942be8\&quot; \&quot;-m\&quot; \&quot;Initial commit\&quot;] \&quot;test-dir\&quot; \&quot;.idiot\&quot;)&quot;, :offset 95, :ns &quot;commit&quot;} {:command &quot;(commit [\&quot;f95a59dd3a4cd71c504ee332114568b8c5942be8\&quot; \&quot;-m\&quot; \&quot;Initial commit\&quot;] \&quot;test-dir\&quot; \&quot;.idiot\&quot;)&quot;, :offset 50, :ns &quot;commit&quot;} {:command &quot;(ns a-namespace\n  (:require [ring.adapter.jetty :refer [run-jetty]]))\n\n(defn handler [request]\n  {:status 200  ; meaning \&quot;OK\&quot;\n   :headers {\&quot;Content-Type\&quot; \&quot;text/plain\&quot;}  ; instead of e.g. \&quot;text/html\&quot;\n   :body \&quot;Hello, world.\\n\&quot;})  ; the payload\n\n(defn start-server []\n  (run-jetty handler {:port 3000}))\n\n(start-server)&quot;, :offset 317, :ns &quot;user&quot;} {:command &quot;(println (format \&quot;Started server on port %s\&quot; 300))&quot;, :offset 48, :ns &quot;user&quot;} {:command &quot;(-&gt;&gt; (str \&quot;test-dir/.idiot\&quot; \&quot;/refs/heads\&quot;)\n     io/file\n     .listFiles\n     (sort-by #(.getName %))\n     (map #(.getName %)))&quot;, :offset 126, :ns &quot;user&quot;} {:command &quot;{:head (str \&quot;hello\&quot; \&quot;world\&quot;)}&quot;, :offset 26, :ns &quot;user&quot;} {:command &quot;(ns explore\n  (:require [file-io :as fio]\n            [ring.adapter.jetty :refer [run-jetty]]\n            [hiccup.page :refer [html5]]\n            [clojure.java.io :as io]))&quot;, :offset 173, :ns &quot;explore&quot;} {:command &quot;(defn get-branches-html\n  [dir db]\n  (let [branches (-&gt;&gt; (str dir db \&quot;/refs/heads\&quot;)\n                      io/file\n                      .listFiles\n                      (sort-by #(.getName %))\n                      (map #(.getName %)))\n        add-branch (fn [vector val] (conj vector [:p val]))]\n    (reduce add-branch [] branches)))&quot;, :offset 334, :ns &quot;explore&quot;} {:command &quot;(get-branches-html \&quot;test-dir/\&quot; \&quot;.idiot\&quot;)&quot;, :offset 20, :ns &quot;explore&quot;} {:command &quot;(html5 [:head [:title \&quot;Branches\&quot;]] [:body (get-branches-html \&quot;test-dir/\&quot; \&quot;.idiot\&quot;)])&quot;, :offset 80, :ns &quot;explore&quot;} {:command &quot;(html5 [:head [:title \&quot;Branches\&quot;]] [:body [:p \&quot;master\&quot;]])&quot;, :offset 53, :ns &quot;explore&quot;} {:command &quot;(html5 [:head [:title \&quot;Branches\&quot;]] [:body [[:p \&quot;master\&quot;]]])&quot;, :offset 56, :ns &quot;explore&quot;} {:command &quot;(html5 [:head [:title \&quot;Branches\&quot;]] [:body [:p \&quot;master\&quot;] [:p \&quot;another\&quot;]])&quot;, :offset 68, :ns &quot;explore&quot;} {:command &quot;(defn get-branches-html\n  [dir db]\n  (let [branches (-&gt;&gt; (str dir db \&quot;/refs/heads\&quot;)\n                      io/file\n                      .listFiles\n                      (sort-by #(.getName %))\n                      (map #(.getName %)))\n        add-branch (fn [vector val] (conj vector [:p val]))]\n    (reduce add-branch [:body ] branches)))&quot;, :offset 340, :ns &quot;explore&quot;} {:command &quot;(html5 [:head [:title \&quot;Branches\&quot;]] (get-branches-html \&quot;test-dir/\&quot; \&quot;.idiot\&quot;))&quot;, :offset 73, :ns &quot;explore&quot;}], :remote []}}</component>
  <component name="RunManager">
    <configuration name="REPL" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="Comp590-Assignment3" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="DEPS" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="SOCKET" />
      <setting name="configType" value="SPECIFY" />
      <setting name="fixLineNumbers" value="false" />
      <module name="" />
      <method v="2" />
    </configuration>
  </component>
  <component name="ServiceViewManager">
    <option name="viewStates">
      <list>
        <serviceView>
          <treeState>
            <expand />
            <select />
          </treeState>
        </serviceView>
      </list>
    </option>
  </component>
  <component name="WindowStateProjectService">
    <state x="223" y="68" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1583204238787">
      <screen x="0" y="0" width="1536" height="824" />
    </state>
    <state x="223" y="68" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1536.824@0.0.1536.824" timestamp="1583204238787" />
    <state x="434" y="216" key="#com.intellij.fileTypes.FileTypeChooser" timestamp="1586580606297">
      <screen x="0" y="0" width="1536" height="824" />
    </state>
    <state x="434" y="216" key="#com.intellij.fileTypes.FileTypeChooser/0.0.1536.824@0.0.1536.824" timestamp="1586580606297" />
    <state x="465" y="237" key="com.intellij.ide.util.TipDialog" timestamp="1586572204258">
      <screen x="0" y="0" width="1536" height="824" />
    </state>
    <state x="465" y="237" key="com.intellij.ide.util.TipDialog/0.0.1536.824@0.0.1536.824" timestamp="1586572204258" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/rev_parse.clj</url>
          <line>11</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/explore.clj</url>
          <line>39</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>